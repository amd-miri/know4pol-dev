<?php

/**
 * @file
 * registryonsteroids_alter.module
 */

require_once __DIR__ . '/registryonsteroids_alter.helpers.inc';
require_once __DIR__ . '/registryonsteroids_alter.menu.inc';
require_once __DIR__ . '/registryonsteroids_alter.alter.inc';

/**
 * Implements hook_module_implements_alter().
 *
 * We make sure our alter hooks are the latest to run so they can alter
 * elements at the end, after all core and contrib hooks are done, just before
 * rendering.
 *
 * @param mixed[] $implementations
 *   Format: $[$module] = $group
 * @param string $hook
 *   The hook.
 */
function registryonsteroids_alter_module_implements_alter(array &$implementations, $hook) {
  // List of alter hooks that we are implementing in this module.
  $alter_hooks = [
    'field_attach_view_alter',
    'entity_view_alter',
    'element_info_alter',
    'form_alter',
    'block_view_alter',
    'page_alter',
  ];

  // Make sure this module run the last.
  if (in_array($hook, $alter_hooks, TRUE) && isset($implementations['registryonsteroids_alter'])) {
    $group = $implementations['registryonsteroids_alter'];
    unset($implementations['registryonsteroids_alter']);
    $implementations['registryonsteroids_alter'] = $group;
  }
}

/**
 * Implements hook_init().
 */
function registryonsteroids_alter_init() {
  // Detect the suggestions related to the current page and save them in a
  // static variable to avoid infinite recursion with menu_get_item().
  $page_suggestions_parts = &drupal_static(__FUNCTION__, []);

  // Add suggestions if an entity is found on the current page.
  if ($entity = registryonsteroids_alter_menu_get_entity()) {
    $page_suggestions_parts[] = $entity['entity type'];

    if (isset($entity['entity']->{$entity['entity info']['entity keys']['bundle']})) {
      $page_suggestions_parts[] = $entity['entity']->{$entity['entity info']['entity keys']['bundle']};
    }
  }

  $page_suggestions_parts = array_merge(
    $page_suggestions_parts,
    explode('/', $_GET['q'])
  );
}
