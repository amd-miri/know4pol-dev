diff --git a/og_vocab.api.php b/og_vocab.api.php
index cf8b3ac..915a345 100644
--- a/og_vocab.api.php
+++ b/og_vocab.api.php
@@ -29,3 +29,18 @@ function hook_og_vocab_is_admin_context() {
 /**
  * @} End of "addtogroup hooks".
  */
+
+ /**
+ * Implements og_vocab_get_accessible_vocabs_alter().
+ */
+function hook_og_vocab_get_accessible_vocabs_alter(&$result) {
+
+  $query = db_select('og_vocab_relation', 'ogr');
+  $query->fields('ogr', array('vid'));
+  // Join with the OG-vocab.
+  $query->innerJoin('og_vocab', 'ogv', 'ogr.vid = ogv.vid');
+  $query->condition('ogv.entity_type', 'node');
+  $result = $query
+    ->execute()
+    ->fetchAllAssoc('vid');
+}
diff --git a/og_vocab.module b/og_vocab.module
index 54173ec..968f1ce 100644
--- a/og_vocab.module
+++ b/og_vocab.module
@@ -1377,6 +1377,12 @@ function og_vocab_get_accessible_vocabs($entity_type, $bundle, $field_name, $acc
   elseif (in_array($use_context, array('yes', 'no')) && !$gids) {
     $gids = og_get_entity_groups('user', $account);
   }
+  elseif ($use_context == 'custom') {
+    $result = array();
+    // Allow other modules to alter the results.
+    drupal_alter('og_vocab_get_accessible_vocabs', $result);
+    return !empty($result) ? array_keys($result) : FALSE;
+  }
 
   if (!$gids) {
     return;
diff --git a/plugins/behavior/OgVocabBehaviorHandler.class.php b/plugins/behavior/OgVocabBehaviorHandler.class.php
index d4621e2..fbd63ed 100644
--- a/plugins/behavior/OgVocabBehaviorHandler.class.php
+++ b/plugins/behavior/OgVocabBehaviorHandler.class.php
@@ -25,6 +25,7 @@ class OgVocabBehaviorHandler extends EntityReference_BehaviorHandler_Abstract {
         'force' => t('Hide widget if no context found'),
         'yes' => t('Use if possible'),
         'no' => t('Do not use'),
+        'custom' => t('Use custom argument'),
       ),
       '#description' => t('Should the OG vocabularies appear according to OG context. Depends on OG-context module.'),
       '#default_value' => $settings['use_context'],
