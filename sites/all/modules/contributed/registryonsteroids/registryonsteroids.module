<?php

/**
 * @file
 * Main module file.
 */

use Drupal\registryonsteroids\ThemeRegistryAltererFirst;
use Drupal\registryonsteroids\ThemeRegistryAltererLast;

/**
 * Implements hook_init().
 */
function registryonsteroids_init() {
  // Auto-rebuild the theme registry.
  if (variable_get('registryonsteroids_rebuild_registry', FALSE) && !defined('MAINTENANCE_MODE')) {
    // Make sure this file is loaded.
    include_once 'modules/system/system.module';
    // Rebuild .info data.
    system_rebuild_theme_data();
    // Rebuild theme registry.
    drupal_theme_rebuild();
  }

  // Set the theme_debug configuration variable.
  // More info at https://www.drupal.org/node/223440
  $GLOBALS['conf']['theme_debug'] = variable_get('registryonsteroids_theme_debug', FALSE);
}

/**
 * Implements hook_menu().
 *
 * @return array[]
 */
function registryonsteroids_menu() {
  return [
    'admin/config/development/registryonsteroids' => [
      'title' => 'Registry on steroids',
      'description' => 'Registry on steroids configuration',
      'page callback' => 'drupal_get_form',
      'page arguments' => ['_registryonsteroids_admin_settings'],
      'access arguments' => [
        'administer site',
      ],
      'file' => 'registryonsteroids.admin.inc',
    ],
  ];
}

/**
 * Implements hook_module_implements_alter().
 *
 * @param mixed[] $implementations
 *   Format: $[$module] = $group
 * @param string $hook
 */
function registryonsteroids_module_implements_alter(array &$implementations, $hook) {
  if ('theme_registry_alter' === $hook) {
    /* @see _registryonsteroids_first_theme_registry_alter() */
    $implementations = ['_registryonsteroids_first' => FALSE] + $implementations;

    /* @see _registryonsteroids_last_theme_registry_alter() */
    $implementations['_registryonsteroids_last'] = FALSE;
  }
}

/**
 * Callback for hook_theme_registry_alter().
 *
 * This callback is registered through hook_module_implements_alter(), and runs
 * before all other hook_theme_registry_alter() implementations.
 *
 * @param array[] $registry
 *   Format: $[$theme_hook] = $info
 */
function _registryonsteroids_first_theme_registry_alter(array &$registry) {
  // Figure out which theme this applies to.
  $trace = debug_backtrace(0, 3);

  if (!isset($trace[2]['function'], $trace[2]['args'][0])
    || '_theme_build_registry' !== $trace[2]['function']) {
    watchdog(
      'registryonsteroids',
      'hook_theme_registry_alter() was called from an unexpected place. We cannot determine which theme this registry belongs to. registryonsteroids functionality might not work.',
      [],
      WATCHDOG_WARNING
    );

    return;
  }

  /* @see _theme_build_registry() */
  list($theme, $base_themes) = $trace[2]['args'];

  (new ThemeRegistryAltererFirst(module_list(), $base_themes, $theme))->alter($registry);
}

/**
 * Callback for hook_theme_registry_alter()
 *
 * This callback is registered through hook_module_implements_alter(), and runs
 * after all other hook_theme_registry_alter() implementations.
 *
 * @param array[] $registry
 *   Format: $[$theme_hook] = $info
 */
function _registryonsteroids_last_theme_registry_alter(array &$registry) {
  (new ThemeRegistryAltererLast())->alter($registry);
}
