{"version":3,"sources":["components/breadcrumb.js"],"names":["breadcrumb","selector","breakpoints","_this2","this","jQuery","once","togglesegments","_this","_loop","i","calculations","wrapperWidth","$wrapper","width","$segmentsWrapper","itemsWidth","$segments","not","each","outerWidth","$lastHiddenItem","siblings","last","lastHiddenItemWidth","$segmentsecond","hasClass","next","addClass","$segmentFirst","removeClass","$visibleSegments","length","showBreadcrumbs","$selector","hide","children","$breadcrumbButton","append","find","enquire","register","medium","match","window","resize","unmatch","show","off","setup","click","Drupal","behaviors","europa_breadcrumb","attach","europa"],"mappings":"CAAC,WACC,YAMA,SAASA,GAAWC,EAAUC,GAC5B,GAAIC,GAASC,IAEbC,QAAOJ,GAAUK,KAAK,aAAc,WAclC,QAASC,KAqCP,IAAK,GApCDC,GAAQJ,KAERK,EAAQ,SAAeC,GAEzB,GAAIC,KACJA,GAAaC,aAAeC,EAASC,QACrCH,EAAaG,MAAQC,EAAiBD,QAEtCH,EAAaK,WAAa,EAC1BC,EAAUC,IAAI,cAAcC,KAAK,SAAUT,GACzCC,EAAaK,YAAcX,OAAOG,GAAOY,YAAW,IAGtD,IAAIC,GAAkBJ,EAAUK,SAAS,cAAcC,OACnDC,EAAsBH,EAAgBP,OAGtCH,GAAaC,cAAgBD,EAAaK,aACxCS,EAAeC,SAAS,aAC1BL,EAAgBM,OAAOT,IAAI,8BAA8BU,SAAS,cAElEC,EAAcD,SAAS,oCACvBH,EAAeG,SAAS,eAKxBjB,EAAaK,WAAaQ,EAAsBb,EAAaC,eAC3DS,EAAgBK,SAAS,aAC3BL,EAAgBS,YAAY,aAE5BD,EAAcC,YAAY,sCAKvBpB,EAAI,EAAGA,EAAIqB,EAAiBC,OAAQtB,IAC3CD,EAAMC,EAGRqB,GAAmBd,EAAUC,IAAI,cAInC,QAASe,GAAgBC,GACvBA,EAAUC,OACVtB,EAASe,SAAS,WA5DpB,GAAIf,GAAWR,OAAOJ,EACtBY,GAASe,SAAS,0BAGlB,IAAIb,GAAmBF,EAASuB,SAAS,iCACrCnB,EAAYF,EAAiBqB,SAAS,wBACtCP,EAAgBd,EAAiBqB,SAAS,+BAC1CX,EAAiBI,EAAcF,OAG/BI,EAAmBd,EAAUC,IAAI,cAuDjCmB,EAAoB,MACpBpB,GAAUe,OAAS,IACrBnB,EAASyB,OAAO,sDAChBD,EAAoBxB,EAAS0B,KAAK,+BAGb,mBAAZC,UAETA,QAAQC,SAASvC,EAAYwC,QAE3BC,MAAO,WACL9B,EAASiB,YAAY,WAEjBO,GACFA,EAAkBF,OAGpB5B,IAEAF,OAAOuC,QAAQC,OAAO,WACpBtC,OAIJuC,QAAS,WACHT,GACFA,EAAkBU,OAEpB9B,EAAUa,YAAY,aAEtBD,EAAcC,YAAY,oCAC1BzB,OAAOuC,QAAQI,IAAI,WAGrBC,MAAO,WACDZ,GACFA,EAAkBa,MAAM,WAEtBjB,EAAgB5B,OAAOF,WAUrCgD,OAAOC,UAAUC,mBACfC,OAAQ,WACN,MAAOtD,GAAW,cAAemD,OAAOI,OAAOrD","file":"components/breadcrumb.js","sourcesContent":["(function () {\n  'use strict';\n\n  /**\n   * Breadcrumb related behaviors.\n   */\n\n  function breadcrumb(selector, breakpoints) {\n    var _this2 = this;\n\n    jQuery(selector).once('breadcrumb', function () {\n      var $wrapper = jQuery(selector);\n      $wrapper.addClass('breadcrumb--collapsible');\n\n      // Global selectors.\n      var $segmentsWrapper = $wrapper.children('.breadcrumb__segments-wrapper');\n      var $segments = $segmentsWrapper.children('.breadcrumb__segment');\n      var $segmentFirst = $segmentsWrapper.children('.breadcrumb__segment--first');\n      var $segmentsecond = $segmentFirst.next();\n\n      // Calculating items that are not hidden.\n      var $visibleSegments = $segments.not('.is-hidden');\n\n      // Hiding breadcrumb segments when there is not enough space.\n      function togglesegments() {\n        var _this = this;\n\n        var _loop = function _loop(i) {\n          // Calculating sizes.\n          var calculations = {};\n          calculations.wrapperWidth = $wrapper.width();\n          calculations.width = $segmentsWrapper.width();\n\n          calculations.itemsWidth = 0;\n          $segments.not('.is-hidden').each(function (i) {\n            calculations.itemsWidth += jQuery(_this).outerWidth(true);\n          });\n\n          var $lastHiddenItem = $segments.siblings('.is-hidden').last();\n          var lastHiddenItemWidth = $lastHiddenItem.width();\n\n          // Hiding segments.\n          if (calculations.wrapperWidth <= calculations.itemsWidth) {\n            if ($segmentsecond.hasClass('is-hidden')) {\n              $lastHiddenItem.next().not('.breadcrumb__segment--last').addClass('is-hidden');\n            } else {\n              $segmentFirst.addClass('breadcrumb__segment--next-hidden');\n              $segmentsecond.addClass('is-hidden');\n            }\n          }\n\n          // Showing segments.\n          if (calculations.itemsWidth + lastHiddenItemWidth < calculations.wrapperWidth) {\n            if ($lastHiddenItem.hasClass('is-hidden')) {\n              $lastHiddenItem.removeClass('is-hidden');\n            } else {\n              $segmentFirst.removeClass('breadcrumb__segment--next-hidden');\n            }\n          }\n        };\n\n        for (var i = 0; i < $visibleSegments.length; i++) {\n          _loop(i);\n        }\n\n        $visibleSegments = $segments.not('.is-hidden');\n      }\n\n      // Showing all hidden breadcrumbs.\n      function showBreadcrumbs($selector) {\n        $selector.hide();\n        $wrapper.addClass('is-open');\n      }\n\n      // Adding button to breadcrumb element that will be used for showing\n      // hidden breadcrumb elements.\n      var $breadcrumbButton = void 0;\n      if ($segments.length > 1) {\n        $wrapper.append('<span class=\"breadcrumb__btn-separator\">...</span>');\n        $breadcrumbButton = $wrapper.find('.breadcrumb__btn-separator');\n      }\n\n      if (typeof enquire !== 'undefined') {\n        // Runs on device width change.\n        enquire.register(breakpoints.medium, {\n          // Desktop.\n          match: function match() {\n            $wrapper.removeClass('is-open');\n\n            if ($breadcrumbButton) {\n              $breadcrumbButton.hide();\n            }\n\n            togglesegments();\n\n            jQuery(window).resize(function () {\n              togglesegments();\n            });\n          },\n          // Mobile.\n          unmatch: function unmatch() {\n            if ($breadcrumbButton) {\n              $breadcrumbButton.show();\n            }\n            $segments.removeClass('is-hidden');\n\n            $segmentFirst.removeClass('breadcrumb__segment--next-hidden');\n            jQuery(window).off('resize');\n          },\n\n          setup: function setup() {\n            if ($breadcrumbButton) {\n              $breadcrumbButton.click(function () {\n                // Adding jQuery(this) as a selector for the showBreadcrumbs function.\n                showBreadcrumbs(jQuery(_this2));\n              });\n            }\n          }\n        });\n      }\n    });\n  }\n\n  // Breadcrumb\n  Drupal.behaviors.europa_breadcrumb = {\n    attach: function attach() {\n      return breadcrumb('#breadcrumb', Drupal.europa.breakpoints);\n    }\n  };\n\n}());\n//# sourceMappingURL=breadcrumb.js.map"],"sourceRoot":"../src/"}